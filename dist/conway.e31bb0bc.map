{"version":3,"sources":["index.js"],"names":["Game","width","height","canvas","document","getElementById","ctx","getContext","generateTable","advance","bind","timer","setInterval","table","i","row","j","isAlive","Math","random","push","y","x","clearRect","fillRect","newTable","slice","cloneTable","neighbours","drawTable","g"],"mappings":"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","file":"conway.e31bb0bc.map","sourceRoot":"..","sourcesContent":["\nclass Game {\n  constructor(width= 1024, height = 256) {\n    this.width = width\n    this.height = height\n\n    this.canvas = document.getElementById(\"canvas\")\n    this.ctx = canvas.getContext(\"2d\")\n\n    this.generateTable()\n\n    this.advance = this.advance.bind(this)\n    this.timer = setInterval(this.advance, 16)\n  }\n\n  generateTable() {\n    const table = []\n\n    for (let i = 0; i < this.height; i++){\n      const row = []\n\n      for (let j = 0; j < this.width; j++){\n        const isAlive = Math.random() > 0.5\n        row.push(isAlive ? 1 : 0)\n      }\n\n      table.push(row)\n    }\n\n    this.table = table\n  }\n\n  isAlive(y, x) {\n    if(y < 0 || y > this.height - 1 || x < 0 || x > this.width - 1) return 0\n\n    return this.table[y][x]\n  }\n\n  drawTable() {\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        const isAlive = this.isAlive(i, j)\n\n        if (isAlive) {\n          this.ctx.clearRect(2 * j, 2 * i, 2, 2)\n        } else {\n          this.ctx.fillRect(2 * j, 2 * i, 2, 2)\n        }\n      }\n    }\n  }\n\n  cloneTable() {\n    const newTable = []\n\n    for (let i = 0; i < this.height; i++) newTable.push(this.table[i].slice(0))\n\n    return newTable\n  }\n\n  advance() {\n    const newTable = this.cloneTable()\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        const isAlive = this.isAlive(i, j)\n        let neighbours = 0\n\n        if (this.isAlive(i - 1, j - 1)) neighbours++\n        if (this.isAlive(i + 1, j - 1)) neighbours++\n        if (this.isAlive(i - 1, j + 1)) neighbours++\n        if (this.isAlive(i + 1, j + 1)) neighbours++\n        if (this.isAlive(i, j - 1)) neighbours++\n        if (this.isAlive(i, j + 1)) neighbours++\n        if (this.isAlive(i - 1, j)) neighbours++\n        if (this.isAlive(i + 1, j)) neighbours++\n\n        if (this.isAlive(i, j) && neighbours < 2) newTable[i][j] = 0\n        else if (this.isAlive(i, j) && neighbours >= 2 && neighbours <= 3) newTable[i][j] = 1\n        else if (this.isAlive(i, j) && neighbours > 3) newTable[i][j] = 0\n        else if (!this.isAlive(i, j) && neighbours === 3) newTable[i][j] = 1\n      }\n    }\n\n    this.table = newTable\n    this.drawTable()\n  }\n}\n\nconst g = new Game()"]}